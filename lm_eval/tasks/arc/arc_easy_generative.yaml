tag:
  - ai2_arc
task: arc_easy_generative
dataset_path: allenai/ai2_arc
dataset_name: ARC-Easy
# output_type: multiple_choice
training_split: train
validation_split: validation
test_split: test
output_type: generate_until
process_docs: !function utils.process_docs_generative
doc_to_text: !function utils.doc_to_text_generative
doc_to_text: "Question: {{question}}?\n{{choice_prompt}}\nLet's think step by step."
doc_to_target: "{{answer_id}}"
# doc_to_choice: "{{choices.text}}"
should_decontaminate: true
doc_to_decontamination_query: "Question: {{question}}\nAnswer:"
filter_list:
  # - name: "strict-match"
  #   filter:
  #     - function: "regex"
  #       regex_pattern: "((?<=The answer is )(.*)(?=.)|(?<=answer is )(.*)(?=.)|(?<=The answer: )(.*)(?=.)|(?<=The final answer: )(.*)(?=.))"
  #     - function: "take_first"
  - name: "flexible-extract"
    filter:
      - function: "multi_choice_regex"
        group_select: -1
        ignore_case: true
        ignore_punctuation: true
        regex_pattern: "(\\([A-Z]\\))"
      - function: "take_first"
generation_kwargs:
  until:
    - "</s>"
    - "Q:"
    - "<|im_end|>"
  do_sample: false
  temperature: 0.0
metric_list:
  - metric: exact_match
    aggregation: mean
    higher_is_better: true
    ignore_case: true
    ignore_punctuation: true
metadata:
  version: 0.0
dataset_kwargs:
  trust_remote_code: true
